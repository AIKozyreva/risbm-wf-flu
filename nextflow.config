//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    fastq = null
    out_dir = "output"
    sample = null
    sample_sheet = null

    reference = null
    blastdb = null
    min_coverage = 20
    typing_version = "1.0.1"
    downsample = null
    min_qscore = 9

    sanitize_fastq = false
    wfversion = "v0.0.4"
    aws_image_prefix = null
    aws_queue = null
    report_name = "report"
    disable_ping = false

    process_label = 'wfflu'
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wfversion,wf'

    wf {
        example_cmd = [
            "--fastq test_data/fastq"
        ]
        flu_sha = "sha416819a0f4e681946651102f387d21e5a335ba98"
        typing_sha = "shacd6e6b77d14424d746c3d7332dfa13e3bda9034f"
        agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-flu'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-flu'
    description     = 'Flu analysis workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    version         = 'v0.0.4'
}

epi2melabs {
    tags = 'amplicon,viruses,public health'
    icon = 'faViruses'
}

env {
    PYTHONNOUSERSITE = 1
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process {
            withLabel:wfflu {
                container = "ontresearch/wf-flu:${params.wf.flu_sha}"
            }
            withLabel:wfflutyping {
                container = "ontresearch/abricate:${params.wf.typing_sha}"
            }
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
        process {
            withLabel:wfflu {
                container = "ontresearch/wf-flu:${params.wf.flu_sha}"
            }
            withLabel:wfflutyping {
                container = "ontresearch/abricate:${params.wf.typing_sha}"
            }
        }
    }

    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
      conda.enabled = true // required for 22.08
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfflu {
                container = "${params.aws_image_prefix}-wf-flu:${params.wf.flu_sha}-root"
            }
            withLabel:wfflutyping {
                container = "${params.aws_image_prefix}-abricate:${params.wf.typing_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
